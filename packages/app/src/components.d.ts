/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { AddNoteMutation, AddNoteMutationVariables } from "./views/home/add-note.generated";
import { DeleteNoteMutation, DeleteNoteMutationVariables } from "./components/note/delete-note.generated";
import { NoteQuery, NoteQueryVariables } from "./views/note-detail/note.generated";
import { NotesQuery, NotesQueryVariables } from "./views/home/notes.generated";
import { UpdateNoteMutation, UpdateNoteMutationVariables } from "./components/note/note-update.generated";
import { Note } from "./generated/graphql";
export namespace Components {
    interface ApolloAddNote {
        "renderer": import('stencil-apollo').MutationRenderer<AddNoteMutation, AddNoteMutationVariables>;
        "variables": AddNoteMutationVariables;
    }
    interface ApolloDeleteNote {
        "renderer": import('stencil-apollo').MutationRenderer<DeleteNoteMutation, DeleteNoteMutationVariables>;
        "variables": DeleteNoteMutationVariables;
    }
    interface ApolloNote {
        "renderer": import('stencil-apollo').QueryRenderer<NoteQuery, NoteQueryVariables>;
        "variables": NoteQueryVariables;
    }
    interface ApolloNotes {
        "renderer": import('stencil-apollo').QueryRenderer<NotesQuery, NotesQueryVariables>;
        "variables": NotesQueryVariables;
    }
    interface ApolloUpdateNote {
        "renderer": import('stencil-apollo').MutationRenderer<UpdateNoteMutation, UpdateNoteMutationVariables>;
        "variables": UpdateNoteMutationVariables;
    }
    interface SigDemoAbout {
    }
    interface SigDemoAppMenu {
    }
    interface SigDemoHome {
    }
    interface SigDemoNote {
        "isClickable": boolean;
        "isPreview": boolean;
        "note": Note;
        "showDeleteButton": boolean;
    }
    interface SigDemoNoteDetail {
        "noteId": string;
    }
    interface SigDemoRoot {
    }
    interface SigDemoTopBar {
        "topBarTitle": string;
    }
}
declare global {
    interface HTMLApolloAddNoteElement extends Components.ApolloAddNote, HTMLStencilElement {
    }
    var HTMLApolloAddNoteElement: {
        prototype: HTMLApolloAddNoteElement;
        new (): HTMLApolloAddNoteElement;
    };
    interface HTMLApolloDeleteNoteElement extends Components.ApolloDeleteNote, HTMLStencilElement {
    }
    var HTMLApolloDeleteNoteElement: {
        prototype: HTMLApolloDeleteNoteElement;
        new (): HTMLApolloDeleteNoteElement;
    };
    interface HTMLApolloNoteElement extends Components.ApolloNote, HTMLStencilElement {
    }
    var HTMLApolloNoteElement: {
        prototype: HTMLApolloNoteElement;
        new (): HTMLApolloNoteElement;
    };
    interface HTMLApolloNotesElement extends Components.ApolloNotes, HTMLStencilElement {
    }
    var HTMLApolloNotesElement: {
        prototype: HTMLApolloNotesElement;
        new (): HTMLApolloNotesElement;
    };
    interface HTMLApolloUpdateNoteElement extends Components.ApolloUpdateNote, HTMLStencilElement {
    }
    var HTMLApolloUpdateNoteElement: {
        prototype: HTMLApolloUpdateNoteElement;
        new (): HTMLApolloUpdateNoteElement;
    };
    interface HTMLSigDemoAboutElement extends Components.SigDemoAbout, HTMLStencilElement {
    }
    var HTMLSigDemoAboutElement: {
        prototype: HTMLSigDemoAboutElement;
        new (): HTMLSigDemoAboutElement;
    };
    interface HTMLSigDemoAppMenuElement extends Components.SigDemoAppMenu, HTMLStencilElement {
    }
    var HTMLSigDemoAppMenuElement: {
        prototype: HTMLSigDemoAppMenuElement;
        new (): HTMLSigDemoAppMenuElement;
    };
    interface HTMLSigDemoHomeElement extends Components.SigDemoHome, HTMLStencilElement {
    }
    var HTMLSigDemoHomeElement: {
        prototype: HTMLSigDemoHomeElement;
        new (): HTMLSigDemoHomeElement;
    };
    interface HTMLSigDemoNoteElement extends Components.SigDemoNote, HTMLStencilElement {
    }
    var HTMLSigDemoNoteElement: {
        prototype: HTMLSigDemoNoteElement;
        new (): HTMLSigDemoNoteElement;
    };
    interface HTMLSigDemoNoteDetailElement extends Components.SigDemoNoteDetail, HTMLStencilElement {
    }
    var HTMLSigDemoNoteDetailElement: {
        prototype: HTMLSigDemoNoteDetailElement;
        new (): HTMLSigDemoNoteDetailElement;
    };
    interface HTMLSigDemoRootElement extends Components.SigDemoRoot, HTMLStencilElement {
    }
    var HTMLSigDemoRootElement: {
        prototype: HTMLSigDemoRootElement;
        new (): HTMLSigDemoRootElement;
    };
    interface HTMLSigDemoTopBarElement extends Components.SigDemoTopBar, HTMLStencilElement {
    }
    var HTMLSigDemoTopBarElement: {
        prototype: HTMLSigDemoTopBarElement;
        new (): HTMLSigDemoTopBarElement;
    };
    interface HTMLElementTagNameMap {
        "apollo-add-note": HTMLApolloAddNoteElement;
        "apollo-delete-note": HTMLApolloDeleteNoteElement;
        "apollo-note": HTMLApolloNoteElement;
        "apollo-notes": HTMLApolloNotesElement;
        "apollo-update-note": HTMLApolloUpdateNoteElement;
        "sig-demo-about": HTMLSigDemoAboutElement;
        "sig-demo-app-menu": HTMLSigDemoAppMenuElement;
        "sig-demo-home": HTMLSigDemoHomeElement;
        "sig-demo-note": HTMLSigDemoNoteElement;
        "sig-demo-note-detail": HTMLSigDemoNoteDetailElement;
        "sig-demo-root": HTMLSigDemoRootElement;
        "sig-demo-top-bar": HTMLSigDemoTopBarElement;
    }
}
declare namespace LocalJSX {
    interface ApolloAddNote {
        "renderer"?: import('stencil-apollo').MutationRenderer<AddNoteMutation, AddNoteMutationVariables>;
        "variables"?: AddNoteMutationVariables;
    }
    interface ApolloDeleteNote {
        "renderer"?: import('stencil-apollo').MutationRenderer<DeleteNoteMutation, DeleteNoteMutationVariables>;
        "variables"?: DeleteNoteMutationVariables;
    }
    interface ApolloNote {
        "renderer"?: import('stencil-apollo').QueryRenderer<NoteQuery, NoteQueryVariables>;
        "variables"?: NoteQueryVariables;
    }
    interface ApolloNotes {
        "renderer"?: import('stencil-apollo').QueryRenderer<NotesQuery, NotesQueryVariables>;
        "variables"?: NotesQueryVariables;
    }
    interface ApolloUpdateNote {
        "renderer"?: import('stencil-apollo').MutationRenderer<UpdateNoteMutation, UpdateNoteMutationVariables>;
        "variables"?: UpdateNoteMutationVariables;
    }
    interface SigDemoAbout {
    }
    interface SigDemoAppMenu {
    }
    interface SigDemoHome {
    }
    interface SigDemoNote {
        "isClickable"?: boolean;
        "isPreview"?: boolean;
        "note"?: Note;
        "onNoteClick"?: (event: CustomEvent<MouseEvent>) => void;
        "showDeleteButton"?: boolean;
    }
    interface SigDemoNoteDetail {
        "noteId"?: string;
    }
    interface SigDemoRoot {
    }
    interface SigDemoTopBar {
        "topBarTitle"?: string;
    }
    interface IntrinsicElements {
        "apollo-add-note": ApolloAddNote;
        "apollo-delete-note": ApolloDeleteNote;
        "apollo-note": ApolloNote;
        "apollo-notes": ApolloNotes;
        "apollo-update-note": ApolloUpdateNote;
        "sig-demo-about": SigDemoAbout;
        "sig-demo-app-menu": SigDemoAppMenu;
        "sig-demo-home": SigDemoHome;
        "sig-demo-note": SigDemoNote;
        "sig-demo-note-detail": SigDemoNoteDetail;
        "sig-demo-root": SigDemoRoot;
        "sig-demo-top-bar": SigDemoTopBar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "apollo-add-note": LocalJSX.ApolloAddNote & JSXBase.HTMLAttributes<HTMLApolloAddNoteElement>;
            "apollo-delete-note": LocalJSX.ApolloDeleteNote & JSXBase.HTMLAttributes<HTMLApolloDeleteNoteElement>;
            "apollo-note": LocalJSX.ApolloNote & JSXBase.HTMLAttributes<HTMLApolloNoteElement>;
            "apollo-notes": LocalJSX.ApolloNotes & JSXBase.HTMLAttributes<HTMLApolloNotesElement>;
            "apollo-update-note": LocalJSX.ApolloUpdateNote & JSXBase.HTMLAttributes<HTMLApolloUpdateNoteElement>;
            "sig-demo-about": LocalJSX.SigDemoAbout & JSXBase.HTMLAttributes<HTMLSigDemoAboutElement>;
            "sig-demo-app-menu": LocalJSX.SigDemoAppMenu & JSXBase.HTMLAttributes<HTMLSigDemoAppMenuElement>;
            "sig-demo-home": LocalJSX.SigDemoHome & JSXBase.HTMLAttributes<HTMLSigDemoHomeElement>;
            "sig-demo-note": LocalJSX.SigDemoNote & JSXBase.HTMLAttributes<HTMLSigDemoNoteElement>;
            "sig-demo-note-detail": LocalJSX.SigDemoNoteDetail & JSXBase.HTMLAttributes<HTMLSigDemoNoteDetailElement>;
            "sig-demo-root": LocalJSX.SigDemoRoot & JSXBase.HTMLAttributes<HTMLSigDemoRootElement>;
            "sig-demo-top-bar": LocalJSX.SigDemoTopBar & JSXBase.HTMLAttributes<HTMLSigDemoTopBarElement>;
        }
    }
}
